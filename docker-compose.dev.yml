version: '3.7'

networks:
  net: 
    external: true
  thinx:
    attachable: true

services:

  mosquitto:
    env_file: .env
    image: registry.keyguru.eu:5000/thinx/mosquitto
    environment:
      - 'MOSQUITTO_PASSWORD=${MOSQUITTO_PASSWORD}'
      - 'MOSQUITTO_USERNAME=${MOSQUITTO_USERNAME}'
    ports:
      - '1883:1883'
      - '8883:8883'
    restart: unless-stopped
    networks:
      - net
      - thinx
    volumes:
      - '/mnt/data/mosquitto/config:/mqtt/config:rw'
      - '/mnt/data/mosquitto/data:/mqtt/data:rw'
      - '/mnt/data/mosquitto/log:/var/log:rw'
      - '/mnt/data/mosquitto/ssl:/mqtt/ssl:rw'
      - '/mnt/data/mosquitto/auth:/mqtt/auth:rw'
    labels:
      - traefik.backend.mosquitto.noexpose

  couchdb:
    env_file: .env
    image: 'couchdb:3.1.0'
    restart: unless-stopped
    healthcheck:
      test:
        - CMD-SHELL
        - 'curl -XGET http://localhost:5984'
      interval: 10s
      timeout: 50s
      retries: 5
    environment:
      - 'NODENAME=${NODENAME}'
      - 'COUCHDB_USER=${COUCHDB_USER}'
      - 'COUCHDB_PASSWORD=${COUCHDB_PASSWORD}'
      - 'COUCHDB_ADMIN=${COUCHDB_USER}'
      - 'COUCHDB_PASS=${COUCHDB_PASSWORD}'
      - 'COUCHDB_COOKIE=${COUCHDB_COOKIE}'
      - 'COUCHDB_SECRET=${COUCHDB_SECRET}'
    ports:
      - 5984
    networks:
      - net
      - thinx
    volumes:
      - '/mnt/data/couchdb:/var/lib/couchdb'
      - '/mnt/data/couchdb:/opt/couchdb/data'
      #- './services/couchdb/vm.args:/opt/couchdb/etc/vm.args'
    labels:
      - traefik.backend.couchdb.noexpose

  thinx-redis:
    env_file: .env
    networks:
      - thinx
    image: registry.keyguru.eu:5000/thinx/redis
    command:
      - redis-server
      - '--requirepass'
      - '${REDIS_PASSWORD}'
      - '--port'
      - '6379'
    environment:
      - ALLOW_EMPTY_PASSWORD=no
      - 'REDIS_PASSWORD=${REDIS_PASSWORD}'
      - 'REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL'
    restart: unless-stopped
    ports:
      - 6379
    volumes:
      - '/mnt/data/redis:/data'
    labels:
      - traefik.backend.thinx-redis

  transformer:
    env_file: .env
    user: transformer
    image: registry.keyguru.eu:5000/thinx/transformer
    restart: unless-stopped
    environment:
      - 'SQREEN_APP_NAME=${SQREEN_APP_NAME}'
      - 'SQREEN_TOKEN=${SQREEN_TOKEN}'
      - 'ROLLBAR_ACCESS_TOKEN=${ROLLBAR_ACCESS_TOKEN}'
      - 'ROLLBAR_ENVIRONMENT=${ROLLBAR_ENVIRONMENT}'
      - REVISION=1
    networks:
      - thinx
    ports:
      - 7474
    labels:
      - traefik.backend.transformer.noexpose
      
  api:
    privileged: true
    shm_size: 2048M
    restart: 'always'
    depends_on:
      - transformer
      - thinx-redis
      - mosquitto
#      couchdb:
#        condition: service_started
#      transformer:
#        condition: service_started
#      thinx-redis:
#        condition: service_started
#      mosquitto:
#        condition: service_healthy
    networks:
      - net
      - thinx
    env_file: .env
    image: registry.keyguru.eu:5000/thinx/api
    environment:
      - 'ENVIRONMENT=${ENVIRONMENT}'
      - 'COUCHDB_USER=${COUCHDB_USER}'
      - 'COUCHDB_PASSWORD=${COUCHDB_PASSWORD}'
    ports:
      - '7442:7442'
      - '7443:7443'
      - '3000'
    volumes:
      - '/mnt/data/deploy:/mnt/data/deploy'
      - '/mnt/data/mosquitto:/mnt/data/mosquitto'
      - '/mnt/data/repos:/mnt/data/repos'
      - '/mnt/data/ssl:/mnt/data/ssl'
      - '/mnt/data/ssh_keys:/mnt/data/ssh_keys'
      - '/mnt/data/conf:/mnt/data/conf'
      - '/mnt/data/test-reports:/mnt/data/test-reports'
      - '/var/run/docker.sock:/var/run/docker.sock'
      - /var/lib/docker
      - /cache
    labels:
      - traefik.docker.network=nat
      - traefik.enable=true
      - traefik.port=7442
      - traefik.backend=thinx-api
      - 'traefik.frontend.rule=Host:${THINX_HOSTNAME}'

  worker:
    env_file: .env
    image: registry.thinx.cloud:5000/thinx/worker:swarm # may be changed to local build
    environment:
      - "SQREEN_TOKEN=${SQREEN_TOKEN}"
      - "ROLLBAR_ACCESS_TOKEN=${ROLLBAR_ACCESS_TOKEN}"
      - "ROLLBAR_ENVIRONMENT=${ROLLBAR_ENVIRONMENT}"
      - "THINX_SERVER=api"
      - "WORKER_SECRET=${WORKER_SECRET}"
    depends_on:
      - api
    networks:
      - internal
    ports:
      - 3000
    labels:
      - traefik.backend.worker.noexpose
    volumes:
      - /mnt/data/repos:/mnt/data/repos
      - /mnt/data/deploy:/mnt/data/deploy

  console:
    depends_on:
      - api
    env_file:
      - .env
    image: registry.keyguru.eu:5000/thinx/console
    networks:
      - net
      - thinx
#    logging:
#      driver: none
    ports:
      - '8000:80'
    restart: unless-stopped # may be required for updating SSL certs
    environment:
      - NGINX_PORT=80
      - 'NGINX_HOST=${WEB_HOSTNAME}'
      - 'LANDING_HOSTNAME=${LANDING_HOSTNAME}'
      - 'WEB_HOSTNAME=${WEB_HOSTNAME}'
      - 'API_HOSTNAME=${API_HOSTNAME}'
      - 'API_BASEURL=${API_BASEURL}'
      - 'ENTERPRISE=${ENTERPRISE}'
      - 'ENVIRONMENT=${ENVIRONMENT}'
      - 'GOOGLE_ANALYTICS_ID=${GOOGLE_ANALYTICS_ID}'
      - 'ROLLBAR_ACCESS_TOKEN=${ROLLBAR_ACCESS_TOKEN}'
      - 'CRISP_WEBSITE_ID=${CRISP_WEBSITE_ID}'
    labels:
      - traefik.enable=true
      - traefik.port=80
      - traefik.backend=console
      - 'traefik.frontend.rule=Host:${WEB_HOSTNAME}'
      - 'traefik.frontend.entryPoints=http,https'
      - traefik.frontend.headers.SSLRedirect=false
      - traefik.frontend.headers.SSLForceHost=true
      - 'traefik.frontend.headers.SSLHost=${WEB_HOSTNAME}'