FROM thinxcloud/base

LABEL maintainer="Matej Sychra <suculent@me.com>"
LABEL name="THiNX API" version="1.8"

ARG ROLLBAR_ENVIRONMENT
ARG THINX_HOSTNAME
ARG THINX_OWNER_EMAIL
ARG REVISION
ARG ROLLBAR_ACCESS_TOKEN
ARG ROLLBAR_ENVIRONMENT
ARG COUCHDB_USER
ARG COUCHDB_PASSWORD
ARG CODACY_PROJECT_TOKEN
ARG SONAR_TOKEN

ARG ENVIRONMENT
ENV ENVIRONMENT=${ENVIRONMENT}

ENV COUCHDB_USER=${COUCHDB_USER}
ENV COUCHDB_PASSWORD=${COUCHDB_PASSWORD}

ARG DEBIAN_FRONTEND=noninteractive

ARG NODE_ENV=production
ENV NODE_ENV=${NODE_ENV}

ARG SQREEN_APP_NAME
ENV SQREEN_APP_NAME=${SQREEN_APP_NAME}

ARG SQREEN_TOKEN
ENV SQREEN_TOKEN=${SQREEN_TOKEN}

ENV THINX_HOSTNAME=${THINX_HOSTNAME}
RUN echo ${THINX_HOSTNAME}

ENV THINX_OWNER_EMAIL=${THINX_OWNER_EMAIL}
RUN echo ${THINX_OWNER_EMAIL}

ENV REVISION=${REVISION}
RUN echo ${REVISION}

ARG AQUA_SEC_TOKEN
ENV AQUA_SEC_TOKEN=${AQUA_SEC_TOKEN}

ARG SNYK_TOKEN
ENV SNYK_TOKEN=${SNYK_TOKEN}

ENV CODACY_PROJECT_TOKEN=${CODACY_PROJECT_TOKEN}

ENV SONAR_TOKEN=${SONAR_TOKEN}
ENV ROLLBAR_ACCESS_TOKEN=${ROLLBAR_ACCESS_TOKEN}

# Create app directory
WORKDIR /opt/thinx/thinx-device-api

RUN adduser --system --disabled-password --shell /bin/bash thinx

# WHY? See blame.
RUN sh -c "echo 'Dir::Ignore-Files-Silently:: \"(.save|.distupgrade)$\";' > /etc/apt/apt.conf.d/99ignoresave"

# RUN sed -i 's/main/main contrib non-free/g' /etc/apt/sources.list && \
RUN apt-get update -qq && \
    apt-get install -qq -y --fix-missing --no-install-recommends \
    apt-transport-https \
    apt-utils \
    btrfs-progs \
    ca-certificates \
    curl \
    e2fsprogs \
    gnutls-bin \
    iptables \
    lxc \
    mosquitto \
    mercurial \
    pigz \
    python \
    python-pip \
    xfsprogs \
    xz-utils \
    net-tools \
    git \
    jq \
    zip \
    p7zip-full \
    default-jre-headless \
    && rm -rf /var/lib/apt/lists/*

# Install app dependencies
COPY package.json ./

RUN npm update \
 && npm install .

# Test modules
RUN npm install nyc mocha jasmine mocha-lcov-reporter coveralls -g

VOLUME /var/lib/docker

# THiNX Web & Device API (HTTP)
EXPOSE 7442

# THiNX Device API (HTTPS)
EXPOSE 7443

#Â GitLab Webbook
EXPOSE 9002

# Copy app source code
COPY . .

# download test reporter as a static binary
RUN curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
RUN chmod +x ./cc-test-reporter

# those packages should not be required and pose HIGH security risks
# g++ is a DevSec build-only dependency, imagemagick source is currently unknown but it is definitely not required
RUN apt-get remove -y \
    && apt-get autoremove -y \
    && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

#ADD https://get.aquasec.com/microscanner .
#RUN chmod +x microscanner && mkdir artifacts
#RUN ./microscanner ${AQUA_SEC_TOKEN} --html --continue-on-failure > ./artifacts/microscanner.html \
#    && cp ./artifacts/microscanner.html ./static/microscanner.html
#RUN rm -rf ./microscanner

RUN mkdir -p ./.nyc_output

COPY ./docker-entrypoint.sh /docker-entrypoint.sh

# only for test mocking (may not work, will need structure with mock data in repo)
COPY ./spec/mnt /mnt

ENTRYPOINT [ "/docker-entrypoint.sh" ]
