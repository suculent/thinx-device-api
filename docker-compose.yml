version: '2.2'

networks:
  nat:
    external: true
  internal:
    external: false

services:

  mosquitto:
    env_file: .env
    # image: suculent/thinx-message_broker
    build:
      context: ./services/broker
      args:
      - MOSQUITTO_PASSWORD=${MOSQUITTO_PASSWORD}
      - MOSQUITTO_USERNAME=${MOSQUITTO_USERNAME}
    environment:
      - MOSQUITTO_PASSWORD=${MOSQUITTO_PASSWORD}
      - MOSQUITTO_USERNAME=${MOSQUITTO_USERNAME}
    ports:
      - 1883:1883
      - 8883:8883
    restart: always
    networks:
      - nat
      - internal
    volumes:
      - /mnt/data/mosquitto/config:/mqtt/config:rw
      - /mnt/data/mosquitto/data:/mqtt/data:rw
      - /mnt/data/mosquitto/log:/mqtt/log:rw
      - /mnt/data/mosquitto/ssl:/mqtt/ssl:rw
      - /mnt/data/mosquitto/auth:/mqtt/auth:rw
    labels:
     - "traefik.backend.mosquitto.noexpose"

  couchdb:
    env_file: .env
    # image: apache/couchdb:2.3.1
    build:
      context: ./services/couchdb # currently used for logging, should work the same except it does not log pass in entry point
      args:
      - NODENAME=${NODENAME}
      - COUCHDB_USER=${COUCHDB_USER}
      - COUCHDB_PASSWORD=${COUCHDB_PASSWORD}
      - COUCHDB_ADMIN=${COUCHDB_USER}
      - COUCHDB_PASS=${COUCHDB_PASSWORD}
      - COUCHDB_COOKIE=${COUCHDB_COOKIE}
      - COUCHDB_SECRET=${COUCHDB_SECRET}
    restart: unless-stopped
    environment:
      - NODENAME=${NODENAME}
      - COUCHDB_USER=${COUCHDB_USER}
      - COUCHDB_PASSWORD=${COUCHDB_PASSWORD}
      - COUCHDB_ADMIN=${COUCHDB_USER}
      - COUCHDB_PASS=${COUCHDB_PASSWORD}
      - COUCHDB_COOKIE=${COUCHDB_COOKIE}
      - COUCHDB_SECRET=${COUCHDB_SECRET}
    ports:
      - 5984:5984 # ! testing
    networks:
      - nat
      - internal
    volumes:
      - /mnt/data/couchdb:/var/lib/couchdb
      - /mnt/data/couchdb:/opt/couchdb/data
    labels:
      - "traefik.backend.couchdb.noexpose"

  thinx-redis:
    env_file: .env
    networks:
      - internal
    # image: suculent/redis-slave:latest
    build:
      context: ./services/redis
      args:
        - ALLOW_EMPTY_PASSWORD=no
        - REDIS_PASSWORD=${REDIS_PASSWORD}
        - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}", "--port", "6379"]
    environment:
      - ALLOW_EMPTY_PASSWORD=no
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
    restart: unless-stopped
    ports:
      - 6379:6379 #Â only dev!
    volumes:
      - /mnt/data/redis:/data
    labels:
     - "traefik.backend.thinx-redis"

  transformer:
    env_file: .env
    user: transformer
    build:
      context: ./services/transformer
      args:
        - SQREEN_APP_NAME=${SQREEN_APP_NAME}
        - SQREEN_TOKEN=${SQREEN_TOKEN}
        - ROLLBAR_ACCESS_TOKEN=${ROLLBAR_ACCESS_TOKEN}
        - ROLLBAR_ENVIRONMENT=${ROLLBAR_ENVIRONMENT}
        - REVISION=1
    restart: always
    environment:
      - SQREEN_APP_NAME=${SQREEN_APP_NAME}
      - SQREEN_TOKEN=${SQREEN_TOKEN}
      - ROLLBAR_ACCESS_TOKEN=${ROLLBAR_ACCESS_TOKEN}
      - ROLLBAR_ENVIRONMENT=${ROLLBAR_ENVIRONMENT}
      - REVISION=1
    networks:
      - internal
    ports:
      - 7474:7474
    labels:
     - "traefik.backend.transformer.noexpose"

  api:
    # because of DIND builders
    privileged: true
    # reserve enough for builders
    shm_size: 2048M
    restart: "no" # for testing, otherwise unless-stopped"
    depends_on:
      - transformer
      - thinx-redis
    networks:
      - nat
      - internal
    env_file: .env
    build:
      context: .
      args:
        - THINX_HOSTNAME=${THINX_HOSTNAME}
        - THINX_OWNER_EMAIL=${THINX_OWNER_EMAIL}
        - REVISION=${REVISION}
        - ROLLBAR_ACCESS_TOKEN=${ROLLBAR_ACCESS_TOKEN}
        - ROLLBAR_ENVIRONMENT=${ROLLBAR_ENVIRONMENT}
        - SQREEN_TOKEN=${SQREEN_TOKEN}
        - SQREEN_APP_NAME=${SQREEN_APP_NAME}
        - AQUA_SEC_TOKEN=${AQUA_SEC_TOKEN}
        - ENVIRONMENT=${ENVIRONMENT}
    environment:
      - ENVIRONMENT=${ENVIRONMENT}
    ports:
      - 7442:7442 # API (HTTP)
      - 7443:7443 # API (HTTPS)
      - 7444:7444 # WebSocket
      - 7445:7445 # WebSocket SSL (reserved)
      - 9002:9002 # Incoming GIT (User) Webhooks
    volumes:
#      - ./conf:/opt/thinx/thinx-device-api/conf # Configuration
      - /mnt/data/deploy:/mnt/data/deploy # Deployment
      - /mnt/data/mosquitto:/mnt/data/mosquitto # Authentication
      - /mnt/data/repos:/mnt/data/repos # Git
      - /mnt/data/ssl:/mnt/data/ssl
      - /mnt/data/ssh_keys:/mnt/data/ssh_keys
      - /mnt/data/conf:/mnt/data/conf
      - /mnt/data/test-reports:/mnt/data/test-reports
      - /var/run/docker.sock:/var/run/docker.sock # DIND
      - /var/lib/docker
      - /cache
    labels:
      - "traefik.docker.network=nat"
      - "traefik.enable=true"
      - "traefik.port=7442"
      - "traefik.backend=thinx-api"

  console:
    env_file:
      - .env
    #image: suculent/thinx-console
    build:
      context: ./services/console/src
      args:
       - NGINX_PORT=80
       - NGINX_HOST=${WEB_HOSTNAME}
       - LANDING_HOSTNAME=${LANDING_HOSTNAME}
       - WEB_HOSTNAME=${WEB_HOSTNAME}
       - API_HOSTNAME=${API_HOSTNAME}
       - API_BASEURL=${API_BASEURL}
       - ENTERPRISE=${ENTERPRISE}
       - ENVIRONMENT=${ENVIRONMENT}
       - GOOGLE_ANALYTICS_ID=${GOOGLE_ANALYTICS_ID}
       - ROLLBAR_ACCESS_TOKEN=${ROLLBAR_ACCESS_TOKEN}
       - CRISP_WEBSITE_ID=${CRISP_WEBSITE_ID}
    networks:
      - nat
      - internal
    ports:
      - 80:80
    restart: unless-stopped
    environment:
      - NGINX_PORT=80
      - NGINX_HOST=${WEB_HOSTNAME}
      - LANDING_HOSTNAME=${LANDING_HOSTNAME}
      - WEB_HOSTNAME=${WEB_HOSTNAME}
      - API_HOSTNAME=${API_HOSTNAME}
      - API_BASEURL=${API_BASEURL}
      - ENTERPRISE=${ENTERPRISE}
      - ENVIRONMENT=${ENVIRONMENT}
      - GOOGLE_ANALYTICS_ID=${GOOGLE_ANALYTICS_ID}
      - ROLLBAR_ACCESS_TOKEN=${ROLLBAR_ACCESS_TOKEN}
      - CRISP_WEBSITE_ID=${CRISP_WEBSITE_ID}

    labels:
      - "traefik.enable=true"
      - "traefik.port=80"
      - "traefik.backend=console"
      - "traefik.frontend.rule=Host:${APP_HOSTNAME}"
      - "traefik.frontend.entryPoints=http,https"
      - "traefik.frontend.headers.SSLRedirect=false"
      - "traefik.frontend.headers.SSLForceHost=true"
      - "traefik.frontend.headers.SSLHost=${APP_HOSTNAME}"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
