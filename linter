#!/bin/bash

source "$(pwd)/infer"

# Sample repositories for testing only, should return error missing workdir
#WORKDIR=/Users/sychram/Repositories/thinx-firmware-esp8266-ino
#WORKDIR=/Users/sychram/Repositories/thinx-firmware-esp8266-mos; LANGUAGE="cpp"
#WORKDIR=/Users/sychram/Repositories/thinx-firmware-esp8266-lua; LANGUAGE="lua"
#WORKDIR=/Users/sychram/Repositories/thinx-firmware-esp8266-pio
#WORKDIR=/Users/sychram/Repositories/thinx-firmware-esp8266-upy

echo "-=[ ☢ THiNX IoT CODE LINTER ☢ ]=-"

whoami

for i in "$@"
do
case $i in
	  -w=*|--workdir=*)
      WORKDIR="${i#*=}"
    ;;
    -l=*|--language=*)
      LANGUAGE="${i#*=}"
    ;;
    *)
      # unknown option
    ;;
esac
done

if [[ -z $WORKDIR ]]; then
	echo "--workdir is not defined (specify path to a repository)"
	exit 1
fi


if [[ -z $LANGUAGE ]]; then
	echo "--language is not defined (inferred by pre-builder)"
	exit 1
fi


THINX_ROOT=$(pwd)
echo "Current THINX_ROOT directory: $THINX_ROOT"

if [[ -z $THINX_ROOT ]]; then
		THINX_ROOT=$(pwd)
		echo "Setting THINX_WEB_ROOT env var to current working directory $(pwd)"
fi

case $LANGUAGE in

		c)
      TOOL_PATH=$(which cppcheck)
			if [[ -z $TOOL_PATH ]]; then
				TOOL_PATH="/usr/bin/cppcheck"
			fi
      TOOL_ATTRS="--force -U PROGMEM"
      EXTENSIONS=( "c" "ino" "cpp" )
    ;;

    javascript)
      TOOL_PATH="$(which node) $(which eslint)"
      TOOL_ATTRS=""
      EXTENSIONS=( js )
    ;;

    lua)
	  TOOL_PATH="./builders/lua-inspect/luainspect"
      TOOL_ATTRS="-fdelimited"
      EXTENSIONS=( lua )
    ;;

    python)
      TOOL_PATH=$(which pylama)
      TOOL_ATTRS=""
      EXTENSIONS=( py )
    ;;

    *)
      echo "Unknown language: $LANGUAGE"
      exit 1
    ;;
esac

ALL=$(/bin/ls $WORKDIR)
echo "" > $WORKDIR/lint.txt

echo "Working directory: $WORKDIR"

# for each extension per language
for EXT in $EXTENSIONS; do

	echo "Linting files in \"${EXT}\" language..."

	# cppcheck is able to work recursively on its own
	if [[ "${TOOL_PATH}" == "cppcheck" ]]; then
		TOOL_PATH=$(which $TOOL_PATH)
		CMD="${TOOL_PATH} ${TOOL_ATTRS} ${WORKDIR}"
		echo $($CMD) > "$WORKDIR/lint.txt"
		cat "$WORKDIR/lint.txt"
	else

		# recursion implementation for other linters
		for XDIR in $ALL; do

			# as folders
			if [[ -d $WORKDIR/$XDIR ]]; then
				FILEZ=$(/bin/ls "$WORKDIR/$XDIR" | /bin/grep "\.${EXT}")
				if [[ ! -z $WORKDIR/$XDIR/$FILES ]]; then
					for FILE in $FILEZ
					do
						PATH=$WORKDIR/$XDIR/$FILE
						if [[ -f $PATH ]]; then
							# run lint on each file in subfolder
							COMMAND="$TOOL_PATH $TOOL_ATTRS $PATH"
							echo "$COMMAND"
							"$COMMAND" >> "$WORKDIR/lint.txt"
						fi
					done
				fi

			# as files
			else
				FILES=$(/bin/ls "$WORKDIR" | /bin/grep "\.${EXT}")
				for FILE in $FILES
				do
					if [[ -f $WORKDIR/$FILE ]]; then
						# run lint on each file in subfolder
						CMD="$TOOL_PATH" "$TOOL_ATTRS" "$WORKDIR/$FILE"
						echo $CMD
						$CMD >> "$WORKDIR/lint.txt"
					fi
				done
			fi
		done

	fi
done

echo $WORKDIR/lint.txt
